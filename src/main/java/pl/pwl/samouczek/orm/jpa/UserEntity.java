/*
 * Created on 1 gru 2014 ( Time 21:45:44 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package pl.pwl.samouczek.orm.jpa;

import java.io.Serializable;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.UniqueConstraint;

/**
 * Persistent class for entity stored in table "user"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserEntity.countAll", query="SELECT COUNT(x) FROM UserEntity x" ),
  @NamedQuery ( name="UserEntity.retrieveByName", query="SELECT u FROM UserEntity u WHERE u.username = :username" ), 
  @NamedQuery ( name="UserEntity.retrieveAllByRole", query="SELECT u FROM UserEntity u WHERE u.role = :role" ),
} )
public class UserEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ID", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="PASSWORD", length=255)
    private String     password     ;

    @Column(name="USERNAME", length=255)
    private String     username     ;

    @Column(name="role", length=45)
    private String     role         ;

    @Column(name="fullname", length=255)
    private String     fullname     ;

    @Column(name="email", length=255)
    private String     email        ;
    
    @ManyToMany( targetEntity = MaterialEntity.class, fetch=FetchType.LAZY )
    @JoinTable(
        name = "user_materials",
        joinColumns = @JoinColumn( name="user", referencedColumnName="ID"),
        inverseJoinColumns = @JoinColumn( name="material", referencedColumnName="ID"),
        uniqueConstraints = @UniqueConstraint(columnNames = { "user", "material" })
    )
	private Set<MaterialEntity> materials;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : PASSWORD ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : USERNAME ( VARCHAR ) 
    public void setUsername( String username ) {
        this.username = username;
    }
    public String getUsername() {
        return this.username;
    }

    //--- DATABASE MAPPING : role ( VARCHAR ) 
    public void setRole( String role ) {
        this.role = role;
    }
    public String getRole() {
        return this.role;
    }

    //--- DATABASE MAPPING : fullname ( VARCHAR ) 
    public void setFullname( String fullname ) {
        this.fullname = fullname;
    }
    public String getFullname() {
        return this.fullname;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }
    
    public Set<MaterialEntity> getMaterials() { 
    	return materials; 
    }
    public void setMaterials(Set<MaterialEntity> materials) {
    	this.materials = materials; 
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(password);
        sb.append("|");
        sb.append(username);
        sb.append("|");
        sb.append(role);
        sb.append("|");
        sb.append(fullname);
        sb.append("|");
        sb.append(email);
        return sb.toString(); 
    } 

}
